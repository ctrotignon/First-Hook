[{"/Users/clement/Documents/GitHub/first-hook/src/reportWebVitals.js":"1","/Users/clement/Documents/GitHub/first-hook/src/App.js":"2","/Users/clement/Documents/GitHub/first-hook/src/index.js":"3","/Users/clement/Documents/GitHub/first-hook/src/Todo.jsx":"4","/Users/clement/Documents/GitHub/first-hook/src/TaskDetails.jsx":"5","/Users/clement/Documents/GitHub/first-hook/src/Summary.jsx":"6"},{"size":362,"mtime":1606729682274,"results":"7","hashOfConfig":"8"},{"size":160,"mtime":1608293082944,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":1606729682273,"results":"10","hashOfConfig":"8"},{"size":2179,"mtime":1608546032938,"results":"11","hashOfConfig":"8"},{"size":877,"mtime":1608548099996,"results":"12","hashOfConfig":"8"},{"size":578,"mtime":1607439386364,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"154jofa",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/clement/Documents/GitHub/first-hook/src/reportWebVitals.js",[],["29","30"],"/Users/clement/Documents/GitHub/first-hook/src/App.js",[],"/Users/clement/Documents/GitHub/first-hook/src/index.js",[],["31","32"],"/Users/clement/Documents/GitHub/first-hook/src/Todo.jsx",["33"],"import React, { useState } from \"react\";\nimport { framer } from \"framer-motion\";\nimport TaskDetails from \"./TaskDetails\";\nimport Summary from \"./Summary\";\nimport \"./Todo.css\";\n\nfunction Todo() {\n  const [input, setInput] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [hideCheckedTasks, setHideCheckedTasks] = useState(false);\n\n  function handleSubmit(event) {\n    onCreateItem();\n    event.preventDefault();\n  }\n\n  function handleCreateFieldChange(event) {\n    setInput(event.target.value);\n  }\n\n  function onCreateItem() {\n    if (input) {\n      setList([{ title: input, checked: false }, ...list]);\n      setInput(\"\");\n    } else {\n      alert(\"Veuillez entrer un texte\");\n    }\n  }\n\n  function removeItemFromList(i) {\n    let listCopy = [...list];\n    listCopy.splice(i, 1);\n    setList(listCopy);\n  }\n\n  function editItemFromList(key, newValue) {\n    let listCopy = [...list];\n    listCopy[key].title = newValue;\n    setList(listCopy);\n  }\n\n  function checkedItemFromList(key) {\n    let listCopy = [...list];\n    listCopy[key].checked = !listCopy[key].checked;\n    setList(listCopy);\n  }\n\n  function handleHideAndDisplayCheckedTasks() {\n    setHideCheckedTasks(!hideCheckedTasks);\n  }\n\n  function displayTask(item, key) {\n    if (hideCheckedTasks && item.checked) {\n      return null;\n    }\n\n    return (\n      <TaskDetails\n        task={item}\n        index={key}\n        key={key}\n        editItem={editItemFromList}\n        deleteItem={removeItemFromList}\n        checkItem={checkedItemFromList}\n      />\n    );\n  }\n\n  return (\n    <div className=\"todo-container\">\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"add-task\"\n          value={input}\n          onChange={handleCreateFieldChange}\n          placeholder=\"Add a new task\"\n        />\n        <input type=\"submit\" value=\"+\" className=\"add-button\" />\n      </form>\n      <div>\n        <input\n          type=\"checkbox\"\n          checked={hideCheckedTasks}\n          onClick={handleHideAndDisplayCheckedTasks}\n        />\n        <label>Hide checked tasks</label>\n      </div>\n      {list.map(displayTask)}\n      <Summary list={list} />\n    </div>\n  );\n}\n\nexport default Todo;\n","/Users/clement/Documents/GitHub/first-hook/src/TaskDetails.jsx",[],"/Users/clement/Documents/GitHub/first-hook/src/Summary.jsx",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"38"},{"ruleId":"36","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":2,"column":10,"nodeType":"42","messageId":"43","endLine":2,"endColumn":16},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],["44"],["45"],"no-unused-vars","'framer' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]